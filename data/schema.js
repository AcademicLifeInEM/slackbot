/* eslint-disable */
{
    controller: {
        events: {
            message_received: [Object],
            direct_message: [Object],
            direct_mention: [Object],
            mention: [Object],
            ambient: [Object]
        },
        config: {
            debug: false,
            logLevel: 'info'
        },
        tasks: [],
        taskCount: 0,
        convoCount: 0,
        memory_store: {
            users: {},
            channels: {},
            teams: {}
        },
        utterances: {
            yes: /^(yes|yea|yup|yep|ya|sure|ok|y|yeah|yah)/i,
            no: /^(no|nah|nope|n)/i
        },
        middleware: {
            send: [Object],
            receive: [Object]
        },
        storage: {
            teams: [Object],
            users: [Object],
            channels: [Object]
        },
        debug: [Function: bound],
        log: {
        [Function]
            emergency: [Function: bound],
            alert: [Function: bound],
            critical: [Function: bound],
            error: [Function: bound],
            warning: [Function: bound],
            notice: [Function: bound],
            info: [Function: bound],
            debug: [Function: bound]
        },
        hears_regexp: [Function],
        changeEars: [Function],
        hears: [Function],
        on: [Function],
        trigger: [Function],
        startConversation: [Function],
        defineBot: [Function],
        spawn: [Function],
        startTicking: [Function],
        shutdown: [Function],
        startTask: [Function],
        receiveMessage: [Function],
        tick: [Function],
        worker: [Function],
        logger: {
            log: [Function]
        },
        hears_test: [Function],
        configureSlackApp: [Function],
        createHomepageEndpoint: [Function],
        createWebhookEndpoints: [Function],
        saveTeam: [Function],
        findTeamById: [Function],
        setupWebserver: [Function],
        getAuthorizeURL: [Function],
        createOauthEndpoints: [Function],
        handleSlackEvents: [Function],
        tickInterval: Timeout {
            _called: true,
            _idleTimeout: 1000,
            _idlePrev: [Object],
            _idleNext: [Object],
            _idleStart: 4965,
            _onTimeout: [Function: wrapper],
            _repeat: [Function]
        }
    },

    config: {
        token: '<TOKEN>',
    },


    utterances: {
        yes: /^(yes|yea|yup|yep|ya|sure|ok|y|yeah|yah)/i,
        no: /^(no|nah|nope|n)/i
    },


    api: {
        api_url: 'https://slack.com/api/',
        callAPI: [Function],
        callAPIWithoutToken: [Function],
        auth: {
            test: [Function]
        },
        oauth: {
            access: [Function]
        },
        channels: {
            archive: [Function],
            create: [Function],
            history: [Function],
            info: [Function],
            invite: [Function],
            join: [Function],
            kick: [Function],
            leave: [Function],
            list: [Function],
            mark: [Function],
            rename: [Function],
            setPurpose: [Function],
            setTopic: [Function],
            unarchive: [Function]
        },
        chat: {
            delete: [Function],
            postMessage: [Function],
            update: [Function]
        },
        emoji: {
            list: [Function]
        },
        files: {
            delete: [Function],
            info: [Function],
            list: [Function],
            upload: [Function]
        },
        groups: {
            archive: [Function],
            close: [Function],
            create: [Function],
            createChild: [Function],
            history: [Function],
            info: [Function],
            invite: [Function],
            kick: [Function],
            leave: [Function],
            list: [Function],
            mark: [Function],
            open: [Function],
            rename: [Function],
            setPurpose: [Function],
            setTopic: [Function],
            unarchive: [Function]
        },
        im: {
            close: [Function],
            history: [Function],
            list: [Function],
            mark: [Function],
            open: [Function]
        },
        mpim: {
            close: [Function],
            history: [Function],
            list: [Function],
            mark: [Function],
            open: [Function]
        },
        pins: {
            add: [Function],
            list: [Function],
            remove: [Function]
        },
        reactions: {
            add: [Function],
            get: [Function],
            list: [Function],
            remove: [Function]
        },
        rtm: {
            start: [Function]
        },
        search: {
            all: [Function],
            files: [Function],
            messages: [Function]
        },
        stars: {
            list: [Function]
        },
        team: {
            accessLogs: [Function],
            info: [Function]
        },
        users: {
            getPresence: [Function],
            info: [Function],
            list: [Function],
            setActive: [Function],
            setPresence: [Function]
        },
    },


    identity: {
        id: 'U1E8DE68K',
        name: 'bot',
        prefs: {
            highlight_words: '',
            user_colors: '',
            color_names_in_list: true,
            growls_enabled: true,
            tz: null,
            push_dm_alert: true,
            push_mention_alert: true,
            msg_replies: '{ "flexpane":false }',
            push_everything: false,
            push_idle_wait: 2,
            push_sound: 'b2.mp3',
            push_loud_channels: '',
            push_mention_channels: '',
            push_loud_channels_set: '',
            email_alerts: 'instant',
            email_alerts_sleep_until: 0,
            email_misc: true,
            email_weekly: true,
            welcome_message_hidden: false,
            all_channels_loud: false,
            loud_channels: '',
            never_channels: '',
            loud_channels_set: '',
            show_member_presence: true,
            search_sort: 'timestamp',
            expand_inline_imgs: true,
            expand_internal_inline_imgs: true,
            expand_snippets: false,
            posts_formatting_guide: true,
            seen_welcome_2: false,
            seen_ssb_prompt: false,
            spaces_new_xp_banner_dismissed: false,
            search_only_my_channels: false,
            emoji_mode: 'default',
            emoji_use: '',
            has_invited: false,
            has_uploaded: false,
            has_created_channel: false,
            search_exclude_channels: '',
            messages_theme: 'default',
            webapp_spellcheck: true,
            no_joined_overlays: false,
            no_created_overlays: false,
            dropbox_enabled: false,
            seen_domain_invite_reminder: false,
            seen_member_invite_reminder: false,
            mute_sounds: false,
            arrow_history: false,
            tab_ui_return_selects: true,
            obey_inline_img_limit: true,
            new_msg_snd: 'knock_brush.mp3',
            require_at: true,
            ssb_space_window: '',
            mac_ssb_bounce: '',
            mac_ssb_bullet: true,
            expand_non_media_attachments: true,
            show_typing: true,
            pagekeys_handled: true,
            last_snippet_type: '',
            display_real_names_override: 0,
            display_preferred_names: true,
            time24: false,
            enter_is_special_in_tbt: false,
            graphic_emoticons: false,
            convert_emoticons: true,
            autoplay_chat_sounds: true,
            ss_emojis: true,
            sidebar_behavior: '',
            seen_onboarding_start: false,
            onboarding_cancelled: false,
            seen_onboarding_slackbot_conversation: false,
            seen_onboarding_channels: false,
            seen_onboarding_direct_messages: false,
            seen_onboarding_invites: false,
            seen_onboarding_search: false,
            seen_onboarding_recent_mentions: false,
            seen_onboarding_starred_items: false,
            seen_onboarding_private_groups: false,
            onboarding_slackbot_conversation_step: 0,
            dnd_enabled: false,
            dnd_start_hour: '22:00',
            dnd_end_hour: '08:00',
            mark_msgs_read_immediately: true,
            start_scroll_at_oldest: true,
            snippet_editor_wrap_long_lines: false,
            ls_disabled: false,
            sidebar_theme: 'default',
            sidebar_theme_custom_values: '',
            f_key_search: false,
            k_key_omnibox: true,
            speak_growls: false,
            mac_speak_voice: 'com.apple.speech.synthesis.voice.Alex',
            mac_speak_speed: 250,
            comma_key_prefs: false,
            at_channel_suppressed_channels: '',
            push_at_channel_suppressed_channels: '',
            prompted_for_email_disabling: false,
            full_text_extracts: false,
            no_text_in_notifications: false,
            muted_channels: '',
            no_macssb1_banner: false,
            no_macssb2_banner: false,
            no_winssb1_banner: false,
            no_omnibox_in_channels: false,
            k_key_omnibox_auto_hide_count: 0,
            hide_user_group_info_pane: false,
            mentions_exclude_at_user_groups: false,
            privacy_policy_seen: true,
            search_exclude_bots: false,
            load_lato_2: false,
            fuller_timestamps: false,
            last_seen_at_channel_warning: 0,
            flex_resize_window: false,
            msg_preview: false,
            msg_preview_displaces: true,
            msg_preview_persistent: true,
            emoji_autocomplete_big: false,
            winssb_run_from_tray: true,
            winssb_window_flash_behavior: 'idle',
            two_factor_auth_enabled: false,
            two_factor_type: null,
            two_factor_backup_type: null,
            enhanced_debugging: false,
            mentions_exclude_at_channels: true,
            confirm_clear_all_unreads: true,
            confirm_user_marked_away: true,
            box_enabled: false,
            seen_single_emoji_msg: false,
            confirm_sh_call_start: true,
            preferred_skin_tone: '',
            show_all_skin_tones: false,
            separate_private_channels: false,
            whats_new_read: 1465163646,
            hotness: false,
            frecency_jumper: '',
            jumbomoji: true,
            no_flex_in_history: true,
            newxp_seen_last_message: 0,
            attachments_with_borders: false,
            sticky_unread_divider: false,
            priority_sort: false,
            custom_channel_sort: '',
            a11y_font_size: 'normal'
        },
        created: 1465163646,
        manual_presence: 'active'
    },


    configureIncomingWebhook: [Function],
    sendWebhook: [Function],
    configureRTM: [Function],
    closeRTM: [Function],
    destroy: [Function],
    startRTM: [Function],
    identifyBot: [Function],
    identifyTeam: [Function],
    startPrivateConversation: [Function],
    startConversation: [Function],
    _startDM: [Function],
    send: [Function],
    replyPublic: [Function],
    replyPublicDelayed: [Function],
    replyPrivate: [Function],
    replyPrivateDelayed: [Function],
    reply: [Function],
    startTyping: [Function],
    replyWithTyping: [Function],
    findConversation: [Function],
    say: [Function],


    team_info: {
        id: 'T097590FJ',
        name: 'ALiEM Innovation Lab',
        email_domain: '',
        domain: 'alieminnovation',
        msg_edit_window_mins: -1,
        prefs: {
            default_channels: [Object],
            display_real_names: true,
            posts_migrating: 0,
            allow_calls: true,
            hide_referers: true,
            msg_edit_window_mins: -1,
            allow_message_deletion: true,
            who_can_at_everyone: 'regular',
            who_can_at_channel: 'ra',
            who_can_create_channels: 'regular',
            who_can_archive_channels: 'regular',
            who_can_create_groups: 'ra',
            who_can_post_general: 'ra',
            who_can_kick_channels: 'admin',
            who_can_kick_groups: 'regular',
            retention_type: 0,
            retention_duration: 0,
            group_retention_type: 0,
            group_retention_duration: 0,
            dm_retention_type: 0,
            dm_retention_duration: 0,
            file_retention_duration: 0,
            file_retention_type: 0,
            allow_retention_override: true,
            require_at_for_mention: false,
            default_rxns: [Object],
            team_handy_rxns: [Object],
            channel_handy_rxns: null,
            compliance_export_start: 0,
            warn_before_at_channel: 'always',
            disallow_public_file_urls: false,
            who_can_create_delete_user_groups: 'admin',
            who_can_edit_user_groups: 'admin',
            who_can_change_team_profile: 'admin',
            allow_shared_channels: false,
            who_has_team_visibility: 'ra',
            invites_only_admins: true,
            disable_file_uploads: 'allow_all',
            who_can_create_shared_channels: 'admin',
            who_can_post_in_shared_channels: [Object],
            allow_shared_channel_perms_override: false,
            dnd_enabled: true,
            dnd_start_hour: '22:00',
            dnd_end_hour: '08:00',
            auth_mode: 'normal',
            who_can_manage_integrations: [Object]
        },
        icon: {
            image_34: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_34.jpg',
            image_44: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_44.jpg',
            image_68: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_68.jpg',
            image_88: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_88.jpg',
            image_102: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_102.jpg',
            image_132: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_102.jpg',
            image_original: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_original.jpg',
            image_230: 'https://s3-us-west-2.amazonaws.com/slack-files2/avatars/2015-08-17/9245006035_095002a76c6896111359_102.jpg'
        },
        over_storage_limit: false,
        plan: '',
        over_integrations_limit: true
    },


    rtm: {
        WebSocket {
            domain: null,
            _events: {
                pong: [Function],
                open: [Function],
                error: [Function],
                close: [Function],
                message: [Function]
            },
            _eventsCount: 5,
            _maxListeners: undefined,
            _socket: TLSSocket {
                _tlsOptions: [Object],
                _secureEstablished: true,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                _SNICallback: null,
                servername: null,
                npnProtocol: undefined,
                alpnProtocol: false,
                authorized: true,
                authorizationError: null,
                encrypted: true,
                _events: [Object],
                _eventsCount: 8,
                connecting: false,
                _hadError: false,
                _handle: [Object],
                _parent: null,
                _host: 'mpmulti-kxy8.slack-msgs.com',
                _readableState: [Object],
                readable: true,
                domain: null,
                _maxListeners: undefined,
                _writableState: [Object],
                writable: true,
                allowHalfOpen: false,
                destroyed: false,
                _bytesDispatched: 398,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: [Object],
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: null,
                _httpMessage: [Object],
                read: [Function],
                _consuming: true,
                _idleNext: null,
                _idlePrev: null,
                _idleTimeout: -1
            },
            _ultron: Ultron {
                id: 0,
                ee: [Object]
            },
            _closeReceived: false,
            bytesReceived: 643,
            readyState: 1,
            supports: {
                binary: true
            },
            extensions: {},
            _binaryType: 'nodebuffer',
            _isServer: false,
            url: 'wss://mpmulti-kxy8.slack-msgs.com/websocket/qIoibC7ISwrQvFd2KVdzljEVR9f3twFLJHEUdh5RBlV5vuhPg8axYr5EbvdIOmRGS0ibE7pWBWbqvOVaxk5pjydjF12MVgR-QD_SGhX23HNDsiRjp0ICs1sOWMSWvgPfHsbfSCZmK4Vm-8txeiD2xA==',
            protocolVersion: 13,
            _receiver: Receiver {
                fragmentedBufferPool: [Object],
                unfragmentedBufferPool: [Object],
                extensions: {},
                maxPayload: 0,
                currentPayloadLength: 0,
                state: [Object],
                overflow: [],
                headerBuffer: < Buffer 81 75 00 00 00 00 00 00 b2 2 c > ,
                expectOffset: 0,
                expectBuffer: null,
                expectHandler: [Function],
                currentMessage: [],
                currentMessageLength: 0,
                messageHandlers: [],
                dead: false,
                processing: true,
                onerror: [Function: onerror],
                ontext: [Function: ontext],
                onbinary: [Function: onbinary],
                onclose: [Function: onclose],
                onping: [Function: onping],
                onpong: [Function: onpong]
            },
            _sender: Sender {
                domain: null,
                _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                _socket: [Object],
                extensions: {},
                firstFragment: true,
                compress: false,
                messageHandlers: [],
                processing: false
            }
        },
        msgcount: 1
    },


}
